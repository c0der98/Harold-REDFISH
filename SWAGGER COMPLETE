swagger: '2.0'
host: localhost:5000
schemes: 
- http
info:
  description: REDFISH SWAGGER BY HAROLD, HTTP AUTH CREDENTIALS ARE sti:sti
  version: "1.0.0"
  title: REDFISH API!!!!
  # put the contact info for your development or API team
  license:
    name: HAROLD SONG


# tags are used for organizing operations
tags:
- name: Harold Redfish
  description: Secured Admin-only calls
- name: REDFISH
  description: Redfish API

paths:
  /rackhd/login:
    post:
      tags:
      - RackHD Login
      summary: login
      description: enter user id and password to get token
      security:
      - basicAuth: []  #HTTP AUTH
      parameters:
      - in: body
        name: credentials
        description: Enter username and password
        required: true
        schema:
          $ref: '#/definitions/Creds'

      responses:
        200:
          description: OK
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed
    
  /rackhd/hook:
    get:
      tags:
      - Read Hooks
      summary: get hooks
      #operationId: readHook
      description: |
        By passing the token, you can read h00ks
      security:
      - basicAuth: [] #HTTPAUTH
      parameters:
      - in: header
        name: token
        description: Enter token here
        required: true
        type: string
      responses:
        200:
          description: successs!!!!
        400:
          description: bad input parameter
        405:
          description: method not allowed
    
    post:
      tags:
      - Create Hooks
      summary: create new hooks
      operationId: addHook
      description: Adds an hook
      security:
      - basicAuth: []
      parameters:
      - in: body
        name: hook
        description: hook to add
        schema:
          $ref: '#/definitions/Hooks'
      - in: header
        name: token
        description: Enter auth_token here
        required: true
        type: string
      - in: header
        name: content-type
        description: (e.g. application/json)
        required: true
        type: string
      responses:
        200:
          description: hook created
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed
        409:
          description: duplicate hook found

    patch:
      tags:
      - Update Hooks
      summary: update a hooks
      operationId: patchHook
      description: update a hook
      security:
      - basicAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - in: query
          name: hook_id
          description: enter hook id here
          type: string
        - in: body
          name: name
          description: enter new name
          schema:
            $ref: '#/definitions/Name'
        - in: header
          name: token
          description: Enter auth_token here
          required: true
          type: string
        - in: header
          name: content-type
          description: enter content-type(e.g. application/json)
          required: true
          type: string

      responses:
        200:
          description: hook updated
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed
        409:
          description: duplicate hook found


    delete:
      tags:
      - Delete Hooks
      summary: delete a hooks
      operationId: deleteHook
      description: delete a hook
      security:
      - basicAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - in: query
          name: hook_id
          description: enter hook id here
          type: string
        - in: header
          name: token
          description: Enter auth_token here
          required: true
          type: string
          
      responses:
        200:
          description: OK
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed

          
  /rackhd/nodes:
  
    get:
      tags: 
      - Read Nodes
      security:
      - basicAuth: []
      summary: Read nodes
      description: Enter token to read all nodes
      parameters:
        - in: header
          name: token
          required: true
          description: enter auth_token here
          type: string
      
      responses:
        200:
          description: OK
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed
    post:
      tags: 
      - Create Nodes
      summary: Create a node
      description: Create a new node
      security:
      - basicAuth: []
      parameters:
        - in: header
          name: token
          description: Enter auth_token here
          required: true
          type: string     
        - in: body
          name: nodes
          required: true
          description: Enter new node data
          schema:
            $ref: '#/definitions/Nodes'
      responses:
        200:
          description: OK
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed
    
    
    delete:
      tags:
      - Delete Nodes
      summary: Delete a node
      description: Delete a node
      security:
      - basicAuth: []
      parameters: 
      - in: query
        name: ids
        description: Enter the node id to be deleted
        required: true
        type: string
      - in: header
        name: token
        description: Enter auth_token here
        required: true
        type: string   
      responses:
        200:
          description: OK
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed
      
    patch:
      tags:
      - Update Nodes
      summary: Update a node
      description: Update nodes
      security:
      - basicAuth: []
      parameters: 
      - in: query
        name: ids
        description: Enter the node id to be deleted
        required: true
        type: string
      - in: header
        name: token
        description: Enter auth_token here
        required: true
        type: string  
      - in: body
        name: Field & Data
        required: true
        description: Enter the the field to update and what data to update it with
        schema:
          $ref: '#/definitions/UpdNode'
      responses:
        200:
          description: OK
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed


  /rackhd/nodes/readtag:
    get:
      tags:
      - Read tags belonging to a node
      summary: See what tags are inside a node
      description: Enter the node ID to see it's tags
      security:
          - basicAuth: []
      parameters:
        - in: header
          name: token
          description: Enter auth_token here
          required: true
          type: string
        - in: query
          type: string
          name: nodeid
          description: Enter the ID of the node you want to read
          required: true
          
      responses:
        200:
          description: OK
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed
    

  /rackhd/nodes/deletetag:
    delete:
      tags: 
      - Delete tags from a nodes
      summary: Delete a tag from a node
      description: Enter the tag name to be deleted and the node ID to delete from
      security:
          - basicAuth: []
      parameters:
        - in: header
          name: token
          description: Enter auth_token here
          required: true
          type: string
        - in: query
          type: string
          name: nodeid
          description: Enter the ID of the node you want to read
          required: true
        - in: query
          type: string
          name: tagname
          required: true
          description: Enter the name of the tag
          
      responses:
        200:
          description: OK
        400:
          description: invalid input, object invalid
        405:
          description: method not allowed
    
  
            
  /rackhd/tags/read:
      get:
        tags:
        - Read Tags
        summary: Read tags
        description: read tags
        security:
          - basicAuth: []
        parameters:
        - in: header
          name: token
          description: Enter auth_token here
          required: true
          type: string
          
        responses:
          200:
            description: OK
          400:
            description: invalid input, object invalid
          405:
            description: method not allowed
          
  
  /rackhd/tags/create:
    post:
      tags: 
      - Create Tags
      summary: Create a new tag
      description: Create a new tag by entering new tag data
      security:
          - basicAuth: []
      parameters: 
      - in: header
        name: token
        description: Enter auth_token here
        required: true
        type: string 
      - in: body
        description: Enter tag data
        name: tag data
        required: true
        schema:
          $ref: '#/definitions/tags'
      
      responses:
        200:
          description: OK
        400:
            description: invalid input, object invalid
        405:
            description: method not allowed
    
  /rackhd/tags/update:
    patch:
      tags: 
      - Update Tags
      summary: Patch a tag onto a Node to match workflow
      description: Patch a tag onto a node to match workflow
      security:
          - basicAuth: []
      parameters: 
      - in: header
        name: token
        description: Enter auth_token here
        required: true
        type: string 
      - in: query
        name: id
        description: Enter the ID of the node
        required: true
        type: string
      - in: body
        name: tag
        description: Enter tags to patch onto the node
        schema:
          $ref: '#/definitions/UpdTags'
      responses:
        200:
          description: OK
        400:
            description: invalid input, object invalid
        405:
            description: method not allowed
            
  /rackhd/tags/delete:
    delete:
      tags: 
      - Delete Tags
      summary: Delete a specific tag
      description: Delete a tag
      security:
          - basicAuth: []
      parameters: 
      - in: header
        name: token
        description: Enter auth_token here
        required: true
        type: string 
      - in: query
        name: name
        description: Enter name of the tag to be deleted
        required: true
        type: string
      responses:
        200:
          description: OK
        400:
            description: invalid input, object invalid
        405:
            description: method not allowed
          
          
          

securityDefinitions:
  basicAuth:
    type: basic
# security:
 #- basicAuth: []
          
definitions:

########### creds ########
  Creds:
    type: object
    required: 
    - username
    - password
    properties:
      username:
        type: string
        example: admin
      password:
        type: string
        example: password123    

########### NODES   ################3
  Nodes:
    type: object
    required:
    - name
    - typ
    properties:
      name:
        type: string
        example: Widget Adapter
      typ:
        type: string
        example: switch
        
########### TAGS #################
  tags:
    type: object
    required: 
    - name
    - cpath
    - contains
    - epath
    - equals
    properties:
      name:
        type: string
        example: AMD 32GB RAM
      cpath:
        type: string
        example: dmi.Base Board Information.Manufacturer
      contains:
        type: string
        example: Intel
      epath:
        type: string
        example: dmi.memory.total
      equals:
        type: string
        example: 329483092KB
        
############ Tag for patching to a node
  UpdTags:
            type: object
            required: 
            - tags
            properties:
              tags:
                type: string
                example: Intel 32GB RAM
 
#######3 SPECIFYING FIELD OF A NODE AND THE DATA TO UPDATE TAHT FIELD ###
  UpdNode:
    type: object
    required: 
    - field
    - data
    properties:
      field:
        type: string
        example: type
      data:
        type: string
        example: compute

        
###########      NAME FOR HOOKS      ####################
  Name:
    type: object
    required:
    - name
    properties:
      name:
        type: string
        example: thisisaname
        
#########    HOOOOOOKS ##########3
  Hooks:
    type: object
    required:
    - id
    - name
    - filters
    - url
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: Widget Adapter
      url:
        type: string
        example: www.sti.com
        
      filters:
        type: array
